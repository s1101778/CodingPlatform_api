---code---
//uva10415
#include<bits/stdc++.h>
using namespace std;
int main(){
    int t;
    cin>>t;
    string line;
    int finger[11],a[11];
    map<char,vector<int>>mp;
    mp['c']={0,1,1,1,0,0,1,1,1,1};
    mp['d']={0,1,1,1,0,0,1,1,1,0};
    mp['e']={0,1,1,1,0,0,1,1,0,0};
    mp['f']={0,1,1,1,0,0,1,0,0,0};
    mp['g']={0,1,1,1,0,0,0,0,0,0};
    mp['a']={0,1,1,0,0,0,0,0,0,0};
    mp['b']={0,1,0,0,0,0,0,0,0,0};
    mp['C']={0,0,1,0,0,0,0,0,0,0};
    mp['D']={1,1,1,1,0,0,1,1,1,0};
    mp['E']={1,1,1,1,0,0,1,1,0,0};
    mp['F']={1,1,1,1,0,0,1,0,0,0};
    mp['G']={1,1,1,1,0,0,0,0,0,0};
    mp['A']={1,1,1,0,0,0,0,0,0,0};
    mp['B']={1,1,0,0,0,0,0,0,0,0};
    cin.ignore();
    while(t--){
        getline(cin,line);
        memset(finger,0,sizeof finger);
        memset(a,0,sizeof a);
        for(int i=0;i<line.length();i++){
            for(int j=0;j<10;j++){
                if(mp[line[i]][j]==1){
                    if(a[j]==1){
                        continue;
                    }
                    else{
                        finger[j]++;
                        a[j]=1;
                    }
                }
                else{
                    a[j]=0;
                }
            }
        }
        for(int i=0;i<10;i++){
            if(i){
                cout<<" ";
            }
            cout<<finger[i];
        }
        cout<<"\n";
    }
}

---dataAInput---
19
cdefgab
BAGFEDC
CbCaDCbCbCCbCbabCCbCbabae
B
D
g
e
d
CbCbCb
bbbbbbbbbbbbbbbbbbbbbbbbb
ABCDEFGabcdefg
BAAGFFfdcbcdeadfbcEDCbabbabbebadbbbababABABBABAGBBBBBGEaEDEDEbEDdadcddbdeeeeddeabdddddDDEEE
ccccCCdccaccacccccaaacccc
cacacaaBBBBcCbbbbBAAGGGGG
GFGFGGaaaaFFgGgGbcdefgabbbbbbbbbbbbb
cccccccccbbbbbbbbbaaaaaaaaaaa
AAACBDGcbabcggdfgeefgggggggggcbbbbbbbabbbbbbbbbbbbbAAAAAAAAAAAAAAAAAAAAAAGGGGGGGGGGGGGGGGGGfdfabdgcfFDFAGGFADDDACBBBBCBBBBBCGGFDgggadfefcdaadadeadadadadadaddadaddadadadadaddadadaaddaddaabbgdffgfdb
AAACBDGcbabcggdfgeefggggggBBBCGGFDgggadfefcdaadadeadadadadadaddadaddadadadadaddadadaaddaddaabbgdffgfdbgggcbbbbggggdggggggdfdfdgdfdgddfdfggabcbFGGGGGGGGGGGGGGGGfdfabdgcfFDFAGGFADDDACBBBBCBB
AAACBDGcbabcggdfgeefggggggBBBCGGFDgggadfefcdaadadeadadadadadaddadaddadadadadaddadadaaddaddaabbcccbbbbbbbbggcbbbbggggdgggggbdgcfFDFAGGFAdfdfggabcbFGGGGGGGGGGGGGGGGfdfabdgcfFDFAGGFABCBBgbcgddfg
---dataAOutput---
0 1 1 1 0 0 1 1 1 1
1 1 1 1 0 0 1 1 1 0
1 8 10 2 0 0 2 2 1 0
1 1 0 0 0 0 0 0 0 0
1 1 1 1 0 0 1 1 1 0
0 1 1 1 0 0 0 0 0 0
0 1 1 1 0 0 1 1 0 0
0 1 1 1 0 0 1 1 1 0
0 3 3 0 0 0 0 0 0 0
0 1 0 0 0 0 0 0 0 0
2 2 3 2 0 0 2 2 2 1
6 2 17 13 0 0 12 12 13 4
0 2 1 5 0 0 5 5 5 5
2 2 3 5 0 0 4 4 4 4
4 1 2 3 0 0 4 1 1 1
0 1 2 1 0 0 1 1 1 1
7 5 10 28 0 0 34 36 34 5
8 5 12 31 0 0 40 45 43 6
8 4 15 35 0 0 41 43 41 9
---dataBInput---

15
cdefgabdbdgg
BAGFEdgffDC
CbCaDCAGDFEFbCbCCbCbabCCbCbabae
cCcCcCcCcCcCcbgbgbadCcAB
AAAACDEFgabcdefGAAAAAAAAbabcbcbbcccaDGDCCCCCCCC
cbabcGDDGGGDACBEDGAbggdffdggd
ACGCGACagcgagc
cdefdecdefdcedfbCbC
AAAAAAAAAAAAAAAAAAAAAAAAAA
dDBbGAFDEgg
AAACBcdefgabdfgeefgggggggggcbbbbbbbabbbbbbbbbbbbbAAAAAAAAcdefgabAAAAAAAGGGGGGGGGGGGGGGGGGfdfabdgcfFDFAGGFADDDACBBBBCBBBBBCGGFDgggadfefcdaadadeadadadadadaddadaddadadadadaddadadaaddaddaabbgdffgfdb
AAACBDGcbacdefgabfgeefgggggggggcbbbbbbbabbbbbbbbbbbbbAAAAAcdefgabAAAAAAGGGGGGGGGGGGGGGGGGfdfabdgcfFDFAGgggcbbbbggggdggggggdfdfdgdfdgddfdfggabcbFGGGGGGGGGGGGGGGGfdfabdgcfFDFAGGFADcdefgabBB
AAACBDGcbabcggdfgeefAAAAAAAAAAAAaadadeadadaAAAAAAAGGGGGGGdadaddadadaaddaddaabbcccbbbbbbbbggcbbbbggggdggggcdefgabGFAdfdfggabcbFGGGGGGGGGGGGGGGGfdfabdgcfFDFAGGFABCBBgbcgddfg
BGGFFEFAEFEDFAFFACbbdgeffEADFgbbegfdbcgfedagdbgf
ggdffgdggddfgdgfgaedeaddcbcgdefADEFDEADGGFBCGFFDgGDGGgGfdgdggdaead
---dataBOutput---

0 1 3 3 0 0 3 3 3 1
2 1 1 1 0 0 2 2 2 0
2 8 10 3 0 0 3 4 2 0
1 8 4 11 0 0 9 9 9 8
4 2 6 6 0 0 7 7 7 4
2 2 5 4 0 0 7 8 8 2
3 4 1 4 0 0 2 2 2 2
0 2 3 1 0 0 1 3 5 3
1 1 1 0 0 0 0 0 0 0
2 1 2 3 0 0 2 2 2 0
8 5 10 29 0 0 33 35 33 5
8 2 12 13 0 0 22 25 24 9
8 3 14 24 0 0 30 29 28 8
2 2 5 9 0 0 12 12 7 1
4 2 3 9 0 0 19 18 17 2