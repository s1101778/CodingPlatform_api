---code---
//uva10041
#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
using namespace std;

int main() {
	int n;
	while (cin >> n) {
		for (int i = 0 ; i < n ; i++) {
			int r, tmp, distance = 0;
			vector<int> s;
			cin >> r;
			for (int j = 0 ; j < r ; j++) {
				cin >> tmp;
				s.push_back(tmp);
			}
			sort(s.begin(), s.end());
			int index = s.size() / 2;
			for (int j = 0;j < r;j++) {
				distance += abs(s[j] - s[index]);
			}
			cout << distance << endl;
		}
	}
	return 0;
}
---dataAInput---
18
2 2 4
3 2 4 6
2 4 2
3 1 8 9
2 3 100
3 1 4 100
4 2 9 12 11
5 2 4 20 4 3
6 1 2 6 5 4 3
7 1 2 3 4 5 6 7
7 20 92 23 239 93 92 283
10 239 2032 2039 2003 939 2039 182 182 182 939
15 28 303 93 93 93 920 12092 932 892 9239 928 127 38 74 2
20 838 2838 2903 39 993 29339 9239 20930 929 929 9028 9239 283 82 2 38 283 76 37 98
30 29 2 39 239 2 3 93 83 283 938 2873 238 83 72 283 273 28382 28 23 838 27 38 48 848 84 848 8282 83 28 38
50 38 38 48 2092 932 892 848 84 848 8282 93 920 1 9239 92 2 3 2 2039 2053 939 26 92 9132 892 848 841 848 2092 932 892 848 84 848 8282 93 920 48 2092 932 892 848 84 848 8282 93 920 1 9239 1
100 26 92 9132 892 848 841 3 34 23 43 38 38 48 2092 932 892 848 84 848 8282 93 920 1 9239 92 2 3 2 2039 2053 939 26 92 9132 892 848 841 848 2092 932 892 848 84 848 8282 93 920 48 2092 932 892 848 84 848 8282 93 920 1 9239 1 29 2 39 239 2 3 93 83 283 938 2873 238 83 72 283 273 28382 28 23 838 27 38 48 848 84 239 2032 2039 2003 939 2039 182 182 182 939 848 8282 83 28 38
200 26 92 9132 892 848 841 3 34 23 43 38 38 48 2092 932 892 848 84 848 8282 93 920 1 9239 92 2 3 2 2039 2053 939 26 92 9132 892 848 841 848 2092 932 892 848 84 848 8282 93 920 48 2092 932 892 848 84 848 8282 93 920 1 9239 1 29 2 29 239 2 3 93 83 283 938 2873 238 83 72 283 273 28382 28 23 838 27 38 58 26 92 9132 892 848 841 3 34 23 43 38 38 48 2092 932 892 848 86 848 8282 93 920 1 9239 92 2 3 2 2039 2053 939 26 92 9132 892 848 841 848 2092 932 892 848 84 848 8282 93 920 48 2092 932 892 848 84 848 8282 93 920 1 9239 3 29 2 39 239 2 3 93 83 283 938 2873 238 83 72 283 273 28382 28 23 838 57 38 48 848 84 239 2032 2039 2003 939 2039 182 182 182 939 848 8282 83 28 36 848 84 239 2032 2039 2003 939 2039 182 182 182 939 848 8282 83 28 38

---dataAOutput---
2
4
2
8
97
99
12
19
9
12
480
7328
24885
84591
44042
69427
142309
284586
---dataBInput---
18
2 1 4
3 2 4 5
2 8 2
3 3 8 9
2 2 101
3 5 4 105
4 2 9 15 11
5 2 4 230 4 3
6 1 4 6 5 4 3
7 1 4 3 4 5 7 7
7 20 23 193 92 91 23 23
11 239 2032 20 203 93 203 182 1812 182 939 35
16 218 303 1432 892 9239 928 1427 38 74 2 93 293 93 920 12092 9
20 8318 838 290 309 9913 283 82 2 38 283 76 37 98 26339 9239 20930 929 929 9228 1239
30 2873 2338 813 722 2283 2273 28382 28 23 838 27 38 48 48 84 848 8382 83 28 38 9 2 39 239 2 31 923 833 23 938
50 38 38 48 2092 932 3 34 23 43 38 38 920 1 9239 92 2 3 2 2039 2053 939 26 892 848 84 848 8282 93 920 48 2092 932 892 848 84 848 8282 93 920 1 9239 1 92 9132 892 848 841 848 2092 932
101 26 92 9132 892 848 841 3 34 23 43 38 38 48 2092 932 892 848 84 848 8282 93 920 1 4 48 2092 932 892 848 84 848 8282 93 920 1 9239 1 29 2 39 239 2 3 93 83 283 938 2873 238 83 72 283 273 28382 28 23 838 27 38 48 848 84 239 2032 2039 2003 939 2039 182 182 182 939 848 8282 83 28 38 9239 92 2 3 2 2039 2053 939 26 92 82 2 38 283 76 37 932 892 848 84 848 8282 93 920
202 26 92 9132 892 848 841 3 34 23 43 38 38 48 2092 932 892 848 84 848 8282 93 920 1 9239 92 2 3 2 2039 2053 939 26 92 9132 892 848 841 848 2092 932 892 848 84 848 8282 93 920 48 2092 932 892 848 84 848 8282 93 920 1 9239 1 29  938 2873 238 83 72 283 273 28382 28 23 838 27 38 58 26 92 9132 892 848 841 3 34 23 43 38 38 48 2092 932 892 848 86 848 8282 93 920 1 9239 92 2 3 2 2039 2153 939 26 92 9132 892 848 841 848 2092 932 892 848 84 848 8282 93 9210 48 2092 932 892 848 84 848 8282 93 920 1 9239 3 29 2 39 239 2 3 93 183 283 938 2873 238 83 72 283 273 28382 28 23 838 57 38 48 848 84 2319 20312 2039 2003 939 2039 182 182 182 939 848 8282 83 28 36 848 84 2329 2032 2039 2003 939 2039 182 2 29 239 2 3 93 83 283 182 182 939 848 8382 83 28 38 4 6
---dataBOutput---
3
3
6
6
99
101
15
229
7
11
310
4713
26413
86404
52302
65339
130224
315806